plugins {
    id 'java'
    id "io.qameta.allure" version "2.9.6"
}

group 'com.tsoftglobal'
version '1.0-SNAPSHOT'

allure {
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}


repositories {
    mavenCentral()
    mavenLocal()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

dependencies {
    //WebDriver
    testImplementation "io.github.bonigarcia:webdrivermanager:${webDriverVersion}"

    //JUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jupiterVersion}"
    testImplementation "org.junit.platform:junit-platform-launcher:${platformVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${jupiterVersion}"
    testImplementation "org.junit.platform:junit-platform-suite-api:${platformVersion}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${jupiterVersion}"

    //Selenium
    testImplementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"

    //Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    //---------------------- Cucumber -------------------------------
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-java8:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberVersion}"
    testImplementation "info.cukes:cucumber-java:${infoCukes}"
    testImplementation "info.cukes:cucumber-junit:${infoCukes}"
    testImplementation "info.cukes:cucumber-core:${infoCukes}"
    testImplementation "info.cukes:gherkin:2.12.2"
    testImplementation 'io.qameta.allure:allure-cucumber5-jvm:2.13.3'

    //---------------------- Android --------------------------------
    implementation 'io.appium:java-client:8.3.0'

    //---------------------- APIs -----------------------------------
    //RestAssured
    /*testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "io.rest-assured:json-path:${restAssuredVersion}"*/

    //JSON
    /*implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"*/

    //---------------------- Bases de datos -------------------------
    //Oracle Database JDBC
    //implementation "com.oracle.database.jdbc:ojdbc8:${jdbcVersion}"

    //MySQL
    /*implementation "mysql:mysql-connector-java:${mysqlVersion}" {
        exclude group: 'com.google.protobuf', name: 'protobuf-java' <-- Revisar esto
    }*/

    //---------------------- Reportes -------------------------------
    //Allure
    testImplementation "io.qameta.allure:allure-junit5:${allureVersion}"
    implementation "io.qameta.allure:allure-java-commons:${allureVersion}"
    implementation "io.qameta.allure:allure-rest-assured:${allureVersion}"

    //Siculix
    implementation "com.sikulix:sikulixapi:${sikulixVersion}"

    //POI
    implementation "org.apache.poi:poi:${poiVersion}"
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"



    //-------------------- Varios (Averiguar) -----------------------
    //implementation 'com.github.javafaker:javafaker:1.0.2'

    /*implementation "org.aspectj:aspectjweaver:1.9.7"
    implementation "org.aspectj:aspectjrt:1.9.7"*/

    //testImplementation "com.typesafe:config:${typeSafeVersion}"

}

task tagsTest(type: Test) {
    /*String itags = System.getProperty("includeTags") ?
            System.getProperty("includeTags") : 'non-existent'
    String etags = System.getProperty("excludeTags") ?
            System.getProperty("excludeTags") : 'non-existent'*/
    String itags = "slow"
    String etags = "fast"

    useJUnitPlatform {
        includeTags itags
        excludeTags etags
    }
}

test {
    useJUnitPlatform {}
}